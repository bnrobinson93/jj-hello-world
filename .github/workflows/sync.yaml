name: Sync Main to Long-Running Branch

on:
  push:
    branches:
      - main

env:
  TARGET_BRANCH: "feat/PEP-2386-dsp-v1-integration"
  PR_TITLE: "Sync main branch changes"
  PR_BODY: |
    This PR automatically syncs changes from the main branch to the long-running feature branch.

    **Auto-generated PR** - Do not squash merge, use regular merge to maintain history.

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check for existing PR
        id: check-pr
        run: |
          echo "Checking for existing PR from main to $TARGET_BRANCH"

          # Use GitHub CLI to check for existing open PRs
          existing_pr=$(gh pr list \
            --base "$TARGET_BRANCH" \
            --head "main" \
            --state open \
            --json number \
            --jq '.[0].number // empty')

          if [ -n "$existing_pr" ]; then
            echo "existing_pr_number=$existing_pr" >> "$GITHUB_OUTPUT"
            echo "pr_exists=true" >> "$GITHUB_OUTPUT"
            echo "Found existing PR #$existing_pr"
          else
            echo "pr_exists=false" >> "$GITHUB_OUTPUT"
            echo "No existing PR found"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if branches are in sync
        id: check-sync
        run: |
          # Fetch latest changes
          git fetch origin "$TARGET_BRANCH"
          git fetch origin main

          # Check if target branch is behind main
          ahead_count=$(git rev-list --count "origin/$TARGET_BRANCH..origin/main")
          echo "Commits ahead: $ahead_count"

          if [ "$ahead_count" -eq 0 ]; then
            echo "branches_in_sync=true" >> "$GITHUB_OUTPUT"
            echo "Branches are already in sync"
          else
            echo "branches_in_sync=false" >> "$GITHUB_OUTPUT"
            echo "Target branch is $ahead_count commits behind main"
          fi

      - name: Create or update PR
        if: steps.check-sync.outputs.branches_in_sync == 'false'
        run: |
          if [ "$PR_EXISTS" = "true" ]; then
            echo "Updating existing PR #$EXISTING_PR_NUMBER"
            
            # Add a comment to the existing PR about the new changes
            comment_body="ðŸ”„ New changes detected from main branch (commit: $GITHUB_SHA)"
            gh pr comment "$EXISTING_PR_NUMBER" --body "$comment_body"
            
            echo "Updated existing PR #$EXISTING_PR_NUMBER with notification of new changes"
          else
            echo "Creating new PR from main to $TARGET_BRANCH"
            
            # Create new PR
            pr_number=$(gh pr create \
              --title "$PR_TITLE" \
              --body "$PR_BODY" \
              --base "$TARGET_BRANCH" \
              --head "main")
            
            echo "Created new PR: $pr_number"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_EXISTS: ${{ steps.check-pr.outputs.pr_exists }}
          EXISTING_PR_NUMBER: ${{ steps.check-pr.outputs.existing_pr_number }}

      - name: Output summary
        run: |
          echo "## Sync Summary" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Source Branch:** main" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Target Branch:** $TARGET_BRANCH" >> "$GITHUB_STEP_SUMMARY"
          echo "- **Branches in sync:** $BRANCHES_IN_SYNC" >> "$GITHUB_STEP_SUMMARY"

          if [ "$BRANCHES_IN_SYNC" = "false" ]; then
            if [ "$PR_EXISTS" = "true" ]; then
              echo "- **Action:** Updated existing PR #$EXISTING_PR_NUMBER" >> "$GITHUB_STEP_SUMMARY"
            else
              echo "- **Action:** Created new PR" >> "$GITHUB_STEP_SUMMARY"
            fi
          else
            echo "- **Action:** No action needed - branches are in sync" >> "$GITHUB_STEP_SUMMARY"
          fi
        env:
          BRANCHES_IN_SYNC: ${{ steps.check-sync.outputs.branches_in_sync }}
          PR_EXISTS: ${{ steps.check-pr.outputs.pr_exists }}
          EXISTING_PR_NUMBER: ${{ steps.check-pr.outputs.existing_pr_number }}
